<<<<<<< HEAD
{
  "$schema": "https://railway.app/railway.schema.json",
  "build": {
    "builder": "DOCKERFILE",
    "dockerfilePath": "apps/api/Dockerfile"
  },
  "deploy": {
    "startCommand": "pnpm start",
    "healthcheckPath": "/health",
    "healthcheckTimeout": 100,
    "restartPolicyType": "ON_FAILURE",
    "restartPolicyMaxRetries": 10
  },
  "environments": {
    "production": {
      "variables": {
        "NODE_ENV": "production",
        "PORT": "4000",
        "HOST": "0.0.0.0",
        "LOG_LEVEL": "info",
        "ENABLE_METRICS": "true"
      }
    },
    "staging": {
      "variables": {
        "NODE_ENV": "staging",
        "PORT": "4000",
        "HOST": "0.0.0.0",
        "LOG_LEVEL": "debug",
        "ENABLE_METRICS": "true"
      }
    }
  },
  "services": [
    {
      "name": "contract-intelligence-api",
      "source": "apps/api",
      "build": {
        "builder": "DOCKERFILE",
        "dockerfilePath": "Dockerfile"
      },
      "deploy": {
        "startCommand": "pnpm start",
        "healthcheckPath": "/health",
        "healthcheckTimeout": 100
      },
      "environments": {
        "production": {
          "variables": {
            "NODE_ENV": "production",
            "PORT": "4000",
            "HOST": "0.0.0.0"
          }
        }
      }
    },
    {
      "name": "contract-intelligence-legal-agent",
      "source": "apps/api/src/legal-agent",
      "build": {
        "builder": "DOCKERFILE",
        "dockerfilePath": "Dockerfile"
      },
      "deploy": {
        "startCommand": "python -m uvicorn legal_api:app --host 0.0.0.0 --port 8000",
        "healthcheckPath": "/health",
        "healthcheckTimeout": 100
      },
      "environments": {
        "production": {
          "variables": {
            "FAITHFULNESS_THRESHOLD": "0.85"
          }
        }
      }
    },
    {
      "name": "contract-intelligence-web",
      "source": "apps/web",
      "build": {
        "builder": "DOCKERFILE",
        "dockerfilePath": "Dockerfile"
      },
      "deploy": {
        "startCommand": "pnpm start",
        "healthcheckPath": "/",
        "healthcheckTimeout": 100
      },
      "environments": {
        "production": {
          "variables": {
            "NODE_ENV": "production",
            "NEXT_PUBLIC_API_URL": "https://api.contract-intelligence.com"
          }
        }
      }
    }
  ],
  "plugins": [
    {
      "name": "postgresql",
      "source": "railway/postgresql",
      "environments": {
        "production": {
          "variables": {
            "POSTGRES_DB": "contract_intelligence",
            "POSTGRES_USER": "postgres"
          }
        }
      }
    },
    {
      "name": "redis",
      "source": "railway/redis",
      "environments": {
        "production": {
          "variables": {
            "REDIS_URL": "redis://redis:6379"
          }
        }
      }
    },
    {
      "name": "postgresql-legal",
      "source": "railway/postgresql",
      "environments": {
        "production": {
          "variables": {
            "POSTGRES_DB": "legal_db",
            "POSTGRES_USER": "postgres"
          }
        }
      }
    }
  ]
}
=======
{
  "$schema": "https://railway.app/railway.schema.json",
  "build": {
    "builder": "DOCKERFILE",
    "dockerfilePath": "apps/api/Dockerfile"
  },
  "deploy": {
    "startCommand": "pnpm start",
    "healthcheckPath": "/health",
    "healthcheckTimeout": 100,
    "restartPolicyType": "ON_FAILURE",
    "restartPolicyMaxRetries": 10
  },
  "environments": {
    "production": {
      "variables": {
        "NODE_ENV": "production",
        "PORT": "4000",
        "HOST": "0.0.0.0",
        "LOG_LEVEL": "info",
        "ENABLE_METRICS": "true"
      }
    },
    "staging": {
      "variables": {
        "NODE_ENV": "staging",
        "PORT": "4000",
        "HOST": "0.0.0.0",
        "LOG_LEVEL": "debug",
        "ENABLE_METRICS": "true"
      }
    }
  },
  "services": [
    {
      "name": "contract-intelligence-api",
      "source": "apps/api",
      "build": {
        "builder": "DOCKERFILE",
        "dockerfilePath": "Dockerfile"
      },
      "deploy": {
        "startCommand": "pnpm start",
        "healthcheckPath": "/health",
        "healthcheckTimeout": 100
      },
      "environments": {
        "production": {
          "variables": {
            "NODE_ENV": "production",
            "PORT": "4000",
            "HOST": "0.0.0.0"
          }
        }
      }
    },
    {
      "name": "contract-intelligence-legal-agent",
      "source": "apps/api/src/legal-agent",
      "build": {
        "builder": "DOCKERFILE",
        "dockerfilePath": "Dockerfile"
      },
      "deploy": {
        "startCommand": "python -m uvicorn legal_api:app --host 0.0.0.0 --port 8000",
        "healthcheckPath": "/health",
        "healthcheckTimeout": 100
      },
      "environments": {
        "production": {
          "variables": {
            "FAITHFULNESS_THRESHOLD": "0.85"
          }
        }
      }
    },
    {
      "name": "contract-intelligence-web",
      "source": "apps/web",
      "build": {
        "builder": "DOCKERFILE",
        "dockerfilePath": "Dockerfile"
      },
      "deploy": {
        "startCommand": "pnpm start",
        "healthcheckPath": "/",
        "healthcheckTimeout": 100
      },
      "environments": {
        "production": {
          "variables": {
            "NODE_ENV": "production",
            "NEXT_PUBLIC_API_URL": "https://api.contract-intelligence.com"
          }
        }
      }
    }
  ],
  "plugins": [
    {
      "name": "postgresql",
      "source": "railway/postgresql",
      "environments": {
        "production": {
          "variables": {
            "POSTGRES_DB": "contract_intelligence",
            "POSTGRES_USER": "postgres"
          }
        }
      }
    },
    {
      "name": "redis",
      "source": "railway/redis",
      "environments": {
        "production": {
          "variables": {
            "REDIS_URL": "redis://redis:6379"
          }
        }
      }
    },
    {
      "name": "postgresql-legal",
      "source": "railway/postgresql",
      "environments": {
        "production": {
          "variables": {
            "POSTGRES_DB": "legal_db",
            "POSTGRES_USER": "postgres"
          }
        }
      }
    }
  ]
}
>>>>>>> 3d06af91a49dadb5b6c6f18371ea05b6636ff22e
