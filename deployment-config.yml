<<<<<<< HEAD
# Deployment Configuration
# This file defines the environment variables and configuration for production deployment

apiVersion: v1
kind: ConfigMap
metadata:
  name: contract-intelligence-config
  namespace: default
data:
  # Application Configuration
  NODE_ENV: "production"
  PORT: "4000"
  HOST: "0.0.0.0"
  
  # Database Configuration
  DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/contract_intelligence"
  
  # Redis Configuration
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  
  # Legal Agent Configuration
  LEGAL_AGENT_URL: "http://legal-agent:8000"
  OPENAI_API_KEY: ""  # Set via secret
  
  # Security
  JWT_SECRET: ""  # Set via secret
  
  # Monitoring
  LOG_LEVEL: "info"
  ENABLE_METRICS: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: contract-intelligence-secrets
  namespace: default
type: Opaque
stringData:
  OPENAI_API_KEY: ""  # Set via deployment
  JWT_SECRET: ""      # Set via deployment
  DATABASE_PASSWORD: "postgres"
  REDIS_PASSWORD: ""

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contract-intelligence-api
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contract-intelligence-api
  template:
    metadata:
      labels:
        app: contract-intelligence-api
    spec:
      containers:
      - name: api
        image: ghcr.io/your-org/contract-intelligence-engine:latest
        ports:
        - containerPort: 4000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: PORT
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: DATABASE_URL
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: REDIS_PORT
        - name: LEGAL_AGENT_URL
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: LEGAL_AGENT_URL
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: contract-intelligence-secrets
              key: OPENAI_API_KEY
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contract-intelligence-legal-agent
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: contract-intelligence-legal-agent
  template:
    metadata:
      labels:
        app: contract-intelligence-legal-agent
    spec:
      containers:
      - name: legal-agent
        image: ghcr.io/your-org/contract-intelligence-engine-legal-agent:latest
        ports:
        - containerPort: 8000
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: contract-intelligence-secrets
              key: OPENAI_API_KEY
        - name: PG_HOST
          value: "postgres-legal"
        - name: PG_PORT
          value: "5432"
        - name: PG_DATABASE
          value: "legal_db"
        - name: PG_USER
          value: "postgres"
        - name: PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: contract-intelligence-secrets
              key: DATABASE_PASSWORD
        - name: FAITHFULNESS_THRESHOLD
          value: "0.85"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contract-intelligence-web
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: contract-intelligence-web
  template:
    metadata:
      labels:
        app: contract-intelligence-web
    spec:
      containers:
      - name: web
        image: ghcr.io/your-org/contract-intelligence-engine-web:latest
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "http://api:4000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: contract-intelligence-api
  namespace: default
spec:
  selector:
    app: contract-intelligence-api
  ports:
  - port: 4000
    targetPort: 4000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: contract-intelligence-legal-agent
  namespace: default
spec:
  selector:
    app: contract-intelligence-legal-agent
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: contract-intelligence-web
  namespace: default
spec:
  selector:
    app: contract-intelligence-web
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: contract-intelligence-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.contract-intelligence.com
    - legal-agent.contract-intelligence.com
    - app.contract-intelligence.com
    secretName: contract-intelligence-tls
  rules:
  - host: api.contract-intelligence.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: contract-intelligence-api
            port:
              number: 4000
  - host: legal-agent.contract-intelligence.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: contract-intelligence-legal-agent
            port:
              number: 8000
  - host: app.contract-intelligence.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: contract-intelligence-web
            port:
              number: 3000
=======
# Deployment Configuration
# This file defines the environment variables and configuration for production deployment

apiVersion: v1
kind: ConfigMap
metadata:
  name: contract-intelligence-config
  namespace: default
data:
  # Application Configuration
  NODE_ENV: "production"
  PORT: "4000"
  HOST: "0.0.0.0"
  
  # Database Configuration
  DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/contract_intelligence"
  
  # Redis Configuration
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  
  # Legal Agent Configuration
  LEGAL_AGENT_URL: "http://legal-agent:8000"
  OPENAI_API_KEY: ""  # Set via secret
  
  # Security
  JWT_SECRET: ""  # Set via secret
  
  # Monitoring
  LOG_LEVEL: "info"
  ENABLE_METRICS: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: contract-intelligence-secrets
  namespace: default
type: Opaque
stringData:
  OPENAI_API_KEY: ""  # Set via deployment
  JWT_SECRET: ""      # Set via deployment
  DATABASE_PASSWORD: "postgres"
  REDIS_PASSWORD: ""

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contract-intelligence-api
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contract-intelligence-api
  template:
    metadata:
      labels:
        app: contract-intelligence-api
    spec:
      containers:
      - name: api
        image: ghcr.io/your-org/contract-intelligence-engine:latest
        ports:
        - containerPort: 4000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: PORT
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: DATABASE_URL
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: REDIS_PORT
        - name: LEGAL_AGENT_URL
          valueFrom:
            configMapKeyRef:
              name: contract-intelligence-config
              key: LEGAL_AGENT_URL
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: contract-intelligence-secrets
              key: OPENAI_API_KEY
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contract-intelligence-legal-agent
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: contract-intelligence-legal-agent
  template:
    metadata:
      labels:
        app: contract-intelligence-legal-agent
    spec:
      containers:
      - name: legal-agent
        image: ghcr.io/your-org/contract-intelligence-engine-legal-agent:latest
        ports:
        - containerPort: 8000
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: contract-intelligence-secrets
              key: OPENAI_API_KEY
        - name: PG_HOST
          value: "postgres-legal"
        - name: PG_PORT
          value: "5432"
        - name: PG_DATABASE
          value: "legal_db"
        - name: PG_USER
          value: "postgres"
        - name: PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: contract-intelligence-secrets
              key: DATABASE_PASSWORD
        - name: FAITHFULNESS_THRESHOLD
          value: "0.85"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contract-intelligence-web
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: contract-intelligence-web
  template:
    metadata:
      labels:
        app: contract-intelligence-web
    spec:
      containers:
      - name: web
        image: ghcr.io/your-org/contract-intelligence-engine-web:latest
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "http://api:4000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: contract-intelligence-api
  namespace: default
spec:
  selector:
    app: contract-intelligence-api
  ports:
  - port: 4000
    targetPort: 4000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: contract-intelligence-legal-agent
  namespace: default
spec:
  selector:
    app: contract-intelligence-legal-agent
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: contract-intelligence-web
  namespace: default
spec:
  selector:
    app: contract-intelligence-web
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: contract-intelligence-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.contract-intelligence.com
    - legal-agent.contract-intelligence.com
    - app.contract-intelligence.com
    secretName: contract-intelligence-tls
  rules:
  - host: api.contract-intelligence.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: contract-intelligence-api
            port:
              number: 4000
  - host: legal-agent.contract-intelligence.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: contract-intelligence-legal-agent
            port:
              number: 8000
  - host: app.contract-intelligence.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: contract-intelligence-web
            port:
              number: 3000
>>>>>>> 3d06af91a49dadb5b6c6f18371ea05b6636ff22e
