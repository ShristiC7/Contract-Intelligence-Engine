generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model Contract {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  fileHash  String   @map("file_hash") @db.VarChar(64)
  status    String   @default("pending") @db.VarChar(50)
  createdAt DateTime @default(now()) @map("created_at")

  clauses             Clause[]
  analysisCheckpoints AnalysisCheckpoint[]

  @@index([userId])
  @@index([status])
  @@index([fileHash])
  @@map("contracts")
}

model Clause {
  id         String                       @id @default(cuid())
  contractId String                       @map("contract_id")
  type       String                       @db.VarChar(100)
  text       String                       @db.Text
  embedding  Unsupported("vector(1536)")?
  riskScore  Float?                       @map("risk_score") @db.Real

  contract Contract @relation(fields: [contractId], references: [id], onDelete: Cascade)

  @@index([contractId])
  @@index([type])
  @@map("clauses")
}

model AnalysisCheckpoint {
  id         String   @id @default(cuid())
  contractId String   @map("contract_id")
  step       String   @db.VarChar(100)
  data       Json     @db.JsonB
  createdAt  DateTime @default(now()) @map("created_at")

  contract Contract @relation(fields: [contractId], references: [id], onDelete: Cascade)

  @@index([contractId])
  @@index([step])
  @@map("analysis_checkpoints")
}

